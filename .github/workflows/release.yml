# Release with JReleaser
# https://jreleaser.org/guide/latest/continuous-integration/github-actions.html

name: Release to Maven Repository with Java CI, Maven, and JReleaser

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Setup the Java version
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      # Prepare for upload to Maven Central
      # https://jreleaser.org/guide/latest/examples/maven/staging-artifacts.html
      - name: Build for release
        run: |
          mvn -ntp -B -Ppublication deploy -DaltDeploymentRepository=local::file:./target/staging-deploy

      - name: List files staged for release
        run: |
          ls -laR ./target/staging-deploy

      # Check JReleaser
      - name: Check JReleaser configuration
        env:
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.JRELEASER_NEXUS2_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -ntp -B jreleaser:config

      # Only release when approved
      - name: Get release approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: FDelporte

      # Post JARs to Maven Central
      # https://jreleaser.org/guide/latest/examples/maven/maven-central.html
      - name: Release to Maven Central
        env:
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.JRELEASER_NEXUS2_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -ntp -B jreleaser:full-release
